/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  UserPackage as PrismaUserPackage,
  PackageModel as PrismaPackageModel,
  User as PrismaUser,
} from "@prisma/client";

export class UserPackageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserPackageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userPackage.count(args);
  }

  async userPackages(
    args: Prisma.UserPackageFindManyArgs
  ): Promise<PrismaUserPackage[]> {
    return this.prisma.userPackage.findMany(args);
  }
  async userPackage(
    args: Prisma.UserPackageFindUniqueArgs
  ): Promise<PrismaUserPackage | null> {
    return this.prisma.userPackage.findUnique(args);
  }
  async createUserPackage(
    args: Prisma.UserPackageCreateArgs
  ): Promise<PrismaUserPackage> {
    return this.prisma.userPackage.create(args);
  }
  async updateUserPackage(
    args: Prisma.UserPackageUpdateArgs
  ): Promise<PrismaUserPackage> {
    return this.prisma.userPackage.update(args);
  }
  async deleteUserPackage(
    args: Prisma.UserPackageDeleteArgs
  ): Promise<PrismaUserPackage> {
    return this.prisma.userPackage.delete(args);
  }

  async getPackageField(parentId: string): Promise<PrismaPackageModel | null> {
    return this.prisma.userPackage
      .findUnique({
        where: { id: parentId },
      })
      .packageField();
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.userPackage
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
