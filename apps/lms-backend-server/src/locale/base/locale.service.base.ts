/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Locale as PrismaLocale } from "@prisma/client";

export class LocaleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LocaleCountArgs, "select">): Promise<number> {
    return this.prisma.locale.count(args);
  }

  async locales(args: Prisma.LocaleFindManyArgs): Promise<PrismaLocale[]> {
    return this.prisma.locale.findMany(args);
  }
  async locale(
    args: Prisma.LocaleFindUniqueArgs
  ): Promise<PrismaLocale | null> {
    return this.prisma.locale.findUnique(args);
  }
  async createLocale(args: Prisma.LocaleCreateArgs): Promise<PrismaLocale> {
    return this.prisma.locale.create(args);
  }
  async updateLocale(args: Prisma.LocaleUpdateArgs): Promise<PrismaLocale> {
    return this.prisma.locale.update(args);
  }
  async deleteLocale(args: Prisma.LocaleDeleteArgs): Promise<PrismaLocale> {
    return this.prisma.locale.delete(args);
  }
}
